logic: justification
system: tableau
name: J₀
description: |
    This is the system I propose as a workable alternative to J0-naive.yml
rules:
    "F→":
        if:
            - "[F] A → B"
        then: 
            - ["[T] A", "[F] B"]
    "T→":
        if:
            - "[T] A -> B"
        then:
            - ["[F] A"]
            - ["[T] B"]
    Te:
        if:
            - "[T] T:A"
        then:
            - ["[T, e] T:A"]
    Fe:
        if:
            - "[F] T:A"
        then:
            - ["[F, e] T:A"]
    "F+":
        if:
            - "[F, e] T+S:A"
        then: 
            - ["[F, e] T:A"]
            - ["[F, e] S:A"]
    "F·": 
        if:
            - "[F, e] (S * T) : B"
        then:
            - ["[F, e] S:(A → B)"]
            - ["[F, e] T:A"]
        where:
            bind: "A → B"
            with: subterms
            in:
                union:
                    - root
                    - assumptions
assumptions: []
